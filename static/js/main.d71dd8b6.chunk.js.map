{"version":3,"sources":["Square.js","Board.js","index.js"],"names":["Square","handleClick","props","x","y","onClick","console","log","value","this","stoneColor","type","className","PureComponent","defaultProps","Board","squares","key","map","row","col","renderSquare","calculateWinner","player","calcuNum","dx","dy","i","fist","second","find","direction","first","firstN","secondN","num","checkDirec","Game","state","oneIsNext","stepNumber","winner","history","current","slice","length","JSON","parse","stringify","setState","concat","Array","fill","step","status","moves","move","desc","jumpTo","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d71dd8b6.chunk.js","sourcesContent":["import React, { Component, PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './reset.css';\nimport './index.css';\n\n\nclass Square extends PureComponent {\n  static defaultProps = {\n    value: null,\n  }\n\n  static propTypes = {\n    value: PropTypes.number,\n    onClick: PropTypes.func.isRequired,\n  }\n\n  handleClick = () => {\n    const { x, y, onClick} = this.props;\n    onClick(x, y);\n  }\n\n  render() {\n    console.log('square')\n    const { value } = this.props;\n    let stoneColor = '';\n    if (value) {\n      stoneColor = value === 1 ? 'black' : 'white';\n    }\n    return (\n      <button\n        type=\"button\"\n        className=\"square\"\n        onClick={this.handleClick}\n      >\n        <span className={`stone ${stoneColor}`} />\n      </button>\n    );\n  }\n}\n\nexport default Square;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Square from './Square';\nimport './reset.css';\nimport './index.css';\n\nclass Board extends PureComponent {\n  static propTypes = {\n    squares: PropTypes.arrayOf(PropTypes.oneOfType(\n      [null, PropTypes.string],\n    )).isRequired,\n    onClick: PropTypes.func.isRequired,\n  }\n\n  renderSquare(x, y) {\n    const { squares, onClick } = this.props;\n    return (\n      <Square\n        key={`${x}-${y}`}\n        x={x}\n        y={y}\n        value={squares[x][y]}\n        onClick={onClick}\n      />\n    );\n  }\n\n  render() {\n    console.log('board')\n    const { squares } = this.props;\n    return (\n      <section>\n        {\n          squares.map((row, y) => (\n            (\n              // 要用甚麼當 key ?\n              // eslint-disable-next-line react/no-array-index-key\n              <div key={y} className=\"board-row\">\n                {row.map((col, x) => this.renderSquare(x, y))}\n              </div>\n            )\n          ))\n        }\n      </section>\n    );\n  }\n}\n\nexport default Board;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport './index.css';\n\nimport Board from './Board';\n\nconst calculateWinner = (squares, x, y, player) => {\n  const num = 5;\n  const calcuNum = (dx, dy) => {\n    let i;\n    for (i = 1; i < num; i++) {\n      if (!squares[x + dx * i] || !squares[x + dx * i][y + dy * i]\n        || player !== squares[x + dx * i][y + dy * i]) return i - 1;\n    }\n    return i;\n  };\n\n  const checkDirec = (first, second) => {\n    const firstN = calcuNum(first.x, first.y);\n    const secondN = calcuNum(second.x, second.y);\n    return (secondN === num || firstN === num\n      || (secondN + firstN) >= num - 1)\n      ? player : null;\n  };\n\n  const directions = [\n    // 檢查水平連續相同的棋子數目\n    { fist: { x: -1, y: 0 }, second: { x: 1, y: 0 } },\n    // 檢查垂直連續相同的棋子數目\n    { fist: { x: 0, y: 1 }, second: { x: 0, y: -1 } },\n    // 檢查 m = -1 連續相同的棋子數目\n    { fist: { x: -1, y: -1 }, second: { x: 1, y: 1 } },\n    // 檢查 m = -1 連續相同的棋子數目\n    { fist: { x: -1, y: 1 }, second: { x: 1, y: -1 } },\n  ];\n\n  const isWinner = directions.find(direction => checkDirec(direction.fist, direction.second));\n\n  if (isWinner) return player;\n  return null;\n};\n\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(19).fill().map(() => Array(19).fill(null)),\n      }],\n      stepNumber: 0,\n      oneIsNext: true,\n      winner: null,\n    };\n    // this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick = (x, y) =>  {\n    const { oneIsNext, stepNumber, winner } = this.state;\n    let { history } = this.state;\n    history = history.slice(0, stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = JSON.parse(JSON.stringify(current.squares.slice()));\n    if (winner || squares[x][y]) {\n      return;\n    }\n\n    squares[x][y] = oneIsNext ? 1 : 2;\n    this.setState({\n      history: history.concat([{ squares }]),\n      stepNumber: history.length,\n      oneIsNext: !oneIsNext,\n      winner: calculateWinner(squares, x, y, squares[x][y]),\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      oneIsNext: (step % 2) === 0,\n      winner: null,\n    });\n  }\n\n  render() {\n    const {\n      history, stepNumber, oneIsNext, winner,\n    } = this.state;\n    const current = history[stepNumber];\n\n    const moves = history.map((step, move) => {\n      const desc = move ? `Go to move # ${move}` : 'Go to game start';\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <li key={move}>\n          <button\n            type=\"button\"\n            onClick={() => this.jumpTo(move)}\n          >\n            {desc}\n          </button>\n        </li>\n      );\n    });\n\n\n    let status;\n    if (winner) {\n      status = `Winner : ${winner === 1 ? 'Black' : 'White'}`;\n    } else {\n      status = `Next player : ${(oneIsNext ? 'Black' : 'White')}`;\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"player\">{status}</div>\n        <div className=\"game-wrapper\">\n          <div className=\"game-board\">\n            <Board\n              squares={current.squares}\n              onClick={this.handleClick}\n            />\n          </div>\n          <div className=\"game-info\">\n            <ol>{moves}</ol>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}