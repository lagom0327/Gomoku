{"version":3,"sources":["component/Square.js","component/Board.js","component/Controlsize.js","component/GameSteps.js","index.js"],"names":["Square","handleClick","props","x","y","onClick","value","this","stoneColor","type","className","PureComponent","defaultProps","Board","squares","key","map","row","col","renderSquare","CustomInput","handleClickCustom","name","min","max","onChange","Controlsize","whichsize","handleChangeSize","GameSteps","history","handleJumpTo","moves","step","move","desc","calculateWinner","player","calcuNum","dx","dy","i","fist","second","find","direction","first","firstN","secondN","num","checkDirec","NextStone","oneIsNext","WinnerStone","isBlack","Game","state","stepNumber","winner","current","slice","length","JSON","parse","stringify","setState","concat","e","size","Number","target","Array","fill","custom","form","document","forms","customSize","elements","jumpTo","status","Component","ReactDOM","render","getElementById"],"mappings":"6TAGMA,G,uNACJC,YAAc,WAAO,IAAD,EACQ,EAAKC,MAAvBC,EADU,EACVA,EAAGC,EADO,EACPA,GACXC,EAFkB,EACJA,SACNF,EAAGC,I,wEAGH,IACAE,EAAUC,KAAKL,MAAfI,MACJE,EAAa,GAIjB,OAHIF,IACFE,EAAuB,IAAVF,EAAc,QAAU,SAGrC,4BACEG,KAAK,SACLC,UAAU,oBACVL,QAASE,KAAKN,aAEd,0BAAMS,UAAS,6CAAwCF,U,GAlB1CG,kBAwBrBX,EAAOY,aAAe,CACpBN,MAAO,MAUMN,QCMAa,G,2LAtCAV,EAAGC,GAAI,IAAD,EACYG,KAAKL,MAA1BY,EADS,EACTA,QAAST,EADA,EACAA,QACjB,OACE,kBAAC,EAAD,CACEU,IAAG,UAAKZ,EAAL,YAAUC,GACbD,EAAGA,EACHC,EAAGA,EACHE,MAAOQ,EAAQV,GAAGD,GAClBE,QAASA,M,+BAKL,IAAD,OACCS,EAAYP,KAAKL,MAAjBY,QACR,OACE,6BAASJ,UAAU,SAEfI,EAAQE,KAAI,SAACC,EAAKb,GAAN,OAIR,yBAAKW,IAAKX,EAAGM,UAAU,aACpBO,EAAID,KAAI,SAACE,EAAKf,GAAN,OAAY,EAAKgB,aAAahB,EAAGC,e,GAxBtCO,kBCDdS,G,MAAc,SAAC,GAAD,IAAGjB,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAGiB,EAAT,EAASA,kBAAT,OAClB,0BACEX,UAAU,kBACVY,KAAK,cAEL,2BACEb,KAAK,SACLC,UAAU,yBACVJ,MAAOH,EACPoB,IAAI,IACJC,IAAI,KACJF,KAAK,IACLG,SAAUJ,IAEZ,0BAAMX,UAAU,+BAAhB,KACA,2BACED,KAAK,SACLC,UAAU,yBACVJ,MAAOF,EACPkB,KAAK,IACLC,IAAI,IACJC,IAAI,KACJC,SAAUJ,OAwDDK,E,iLA5CH,IAAD,EAGHnB,KAAKL,MADPyB,EAFK,EAELA,UAAWxB,EAFN,EAEMA,EAAGC,EAFT,EAESA,EAAGwB,EAFZ,EAEYA,iBAAkBP,EAF9B,EAE8BA,kBAGrC,OACE,yBAAKX,UAAU,eACb,4BACED,KAAK,SACLH,MAAM,KACNI,UAAS,4BAAqC,KAAdiB,EAAmB,4BAA8B,IACjFtB,QAASuB,GAJX,WAQA,4BACEnB,KAAK,SACLH,MAAM,KACNI,UAAS,4BAAqC,KAAdiB,EAAmB,4BAA8B,IACjFtB,QAASuB,GAJX,WAQA,4BACEnB,KAAK,SACLC,UAAS,4BAAqC,WAAdiB,EAAyB,4BAA8B,IACvFtB,QAASgB,GAET,wBAAIX,UAAU,0BAAd,eACCP,GAAK,kBAAC,EAAD,CAAaA,EAAGA,EAAGC,EAAGA,EAAGiB,kBAAmBA,U,GA9BlCV,iBCHXkB,G,MA9BG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aACtBC,EAAQF,EAAQd,KAAI,SAACiB,EAAMC,GAC/B,IAAMC,EAAOD,EAAI,uBAAmBA,GAAS,mBAC7C,OAEE,wBAAInB,IAAKmB,EAAMxB,UAAU,aACvB,4BACED,KAAK,SACLJ,QAAS,kBAAM0B,EAAaG,KAE3BC,OAMT,OACE,yBAAKzB,UAAU,cACb,4BAAKsB,MCVLI,EAAkB,SAACtB,EAASX,EAAGC,EAAGiC,GACtC,IACMC,EAAW,SAACC,EAAIC,GACpB,IAAIC,EACJ,IAAKA,EAAI,EAAGA,EAHF,EAGWA,IACnB,IAAK3B,EAAQV,EAAIoC,EAAKC,KAAO3B,EAAQV,EAAIoC,EAAKC,GAAGtC,EAAIoC,EAAKE,IACrDJ,IAAWvB,EAAQV,EAAIoC,EAAKC,GAAGtC,EAAIoC,EAAKE,GAAI,OAAOA,EAAI,EAE9D,OAAOA,GAwBT,MAbmB,CAEjB,CAAEC,KAAM,CAAEvC,GAAI,EAAGC,EAAG,GAAKuC,OAAQ,CAAExC,EAAG,EAAGC,EAAG,IAE5C,CAAEsC,KAAM,CAAEvC,EAAG,EAAGC,EAAG,GAAKuC,OAAQ,CAAExC,EAAG,EAAGC,GAAI,IAE5C,CAAEsC,KAAM,CAAEvC,GAAI,EAAGC,GAAI,GAAKuC,OAAQ,CAAExC,EAAG,EAAGC,EAAG,IAE7C,CAAEsC,KAAM,CAAEvC,GAAI,EAAGC,EAAG,GAAKuC,OAAQ,CAAExC,EAAG,EAAGC,GAAI,KAGnBwC,MAAK,SAAAC,GAAS,OAnBvB,SAACC,EAAOH,GACzB,IAAMI,EAAST,EAASQ,EAAM3C,EAAG2C,EAAM1C,GACjC4C,EAAUV,EAASK,EAAOxC,EAAGwC,EAAOvC,GAC1C,OAbU,IAaF4C,GAbE,IAaiBD,GACrBC,EAAUD,GAAWE,EACvBZ,EAAS,KAc+Ba,CAAWL,EAAUH,KAAMG,EAAUF,WAE9DN,EACd,MAGHc,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OAChB,yBAAK1C,UAAU,eACb,2CACA,yBAAKA,UAAS,gBAAW0C,EAAY,QAAU,aAQ7CC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAClB,yBAAK5C,UAAU,iBACb,qCACA,yBAAKA,UAAS,gBAAW4C,EAAU,QAAU,aAS3CC,E,YACJ,WAAYrD,GAAQ,IAAD,8BACjB,4CAAMA,KAeRD,YAAc,SAACE,EAAGC,GAAO,IAAD,EACoB,EAAKoD,MAAvCJ,EADc,EACdA,UAAWK,EADG,EACHA,WAAYC,EADT,EACSA,OACzB5B,EAAY,EAAK0B,MAAjB1B,QAEA6B,GADN7B,EAAUA,EAAQ8B,MAAM,EAAGH,EAAa,IAChB3B,EAAQ+B,OAAS,GACnC/C,EAAUgD,KAAKC,MAAMD,KAAKE,UAAUL,EAAQ7C,QAAQ8C,UACtDF,GAAU5C,EAAQV,GAAGD,KAIzBW,EAAQV,GAAGD,GAAKiD,EAAY,EAAI,EAChC,EAAKa,SAAS,CACZnC,QAASA,EAAQoC,OAAO,CAAC,CAAEpD,aAC3B2C,WAAY3B,EAAQ+B,OACpBT,WAAYA,EACZM,OAAQtB,EAAgBtB,EAASX,EAAGC,EAAGU,EAAQV,GAAGD,QA/BnC,EAoCnByB,iBAAmB,SAAAuC,GACjB,IAAMC,EAAOC,OAAOF,EAAEG,OAAOhE,OAC7B,EAAK2D,SAAS,CACZnC,QAAS,CAAC,CACRhB,QAASyD,MAAMH,GAAMI,OAAOxD,KAAI,kBAAMuD,MAAMH,GAAMI,KAAK,WAEzDf,WAAY,EACZL,WAAW,EACXM,OAAQ,KACRe,OAAQ,CACNtE,EAAG,GACHC,EAAG,OA/CU,EAoDnBiB,kBAAoB,WAClB,IAAMqD,EAAOC,SAASC,MAAMC,WACxB1E,EAAIuE,EAAOL,OAAOK,EAAKI,SAAS3E,EAAEG,OAAS,EAC3CF,EAAIsE,EAAOL,OAAOK,EAAKI,SAAS1E,EAAEE,OAAS,EAC3CH,EAAI,KAAIA,EAAI,IACZC,EAAI,KAAIA,EAAI,IAChB,IAAMqE,EAAS,CAAEtE,IAAGC,KACpB,EAAK6D,SAAS,CACZnC,QAAS,CAAC,CACRhB,QAASyD,MAAMnE,GAAGoE,OAAOxD,KAAI,kBAAMuD,MAAMpE,GAAGqE,KAAK,WAEnDf,WAAY,EACZL,WAAW,EACXM,OAAQ,KACRe,YAlEe,EAsEnBM,OAAS,SAAA9C,GACP,EAAKgC,SAAS,CACZR,WAAYxB,EACZmB,UAAYnB,EAAO,IAAO,EAC1ByB,OAAQ,QAxEV,EAAKF,MAAQ,CACX1B,QAAS,CAAC,CACRhB,QAASyD,MAAM,IAAIC,OAAOxD,KAAI,kBAAMuD,MAAM,IAAIC,KAAK,WAErDf,WAAY,EACZL,WAAW,EACXM,OAAQ,KACRe,OAAQ,CACNtE,EAAG,GACHC,EAAG,KAXU,E,sEA8ET,IASJ4E,EATG,EAGHzE,KAAKiD,MADP1B,EAFK,EAELA,QAAS2B,EAFJ,EAEIA,WAAYL,EAFhB,EAEgBA,UAAWM,EAF3B,EAE2BA,OAF3B,IAEmCe,OAAUtE,EAF7C,EAE6CA,EAAGC,EAFhD,EAEgDA,EAEjDuD,EAAU7B,EAAQ2B,GAGlB9B,EAAYxB,EAAI,SAAW2B,EAAQ,GAAGhB,QAAQ+C,OASpD,OALEmB,EADEtB,EACO,kBAAC,EAAD,CAAaJ,QAAoB,IAAXI,IAEtB,kBAAC,EAAD,CAAWN,UAAWA,IAI/B,yBAAK1C,UAAU,QACb,wBAAIA,UAAU,cAAd,UACA,yBAAKA,UAAU,UAAUsE,GACzB,yBAAKtE,UAAU,gBACb,kBAAC,EAAD,CACEiB,UAAWA,EACXxB,EAAGA,EACHC,EAAGA,EACHwB,iBAAkBrB,KAAKqB,iBACvBP,kBAAmBd,KAAKc,oBAE1B,kBAAC,EAAD,CACEP,QAAS6C,EAAQ7C,QACjBT,QAASE,KAAKN,cAEhB,kBAAC,EAAD,CAAW6B,QAASA,EAASC,aAAcxB,KAAKwE,e,GA/GvCE,aAwHnBC,IAASC,OACP,kBAAC,EAAD,MACAR,SAASS,eAAe,W","file":"static/js/main.e5a3f6c2.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Square extends PureComponent {\n  handleClick = () => {\n    const { x, y, onClick } = this.props;\n    onClick(x, y);\n  }\n\n  render() {\n    const { value } = this.props;\n    let stoneColor = '';\n    if (value) {\n      stoneColor = value === 1 ? 'black' : 'white';\n    }\n    return (\n      <button\n        type=\"button\"\n        className=\"board-row__square\"\n        onClick={this.handleClick}\n      >\n        <span className={`board-row__stone board-row__stone--${stoneColor}`} />\n      </button>\n    );\n  }\n}\n\nSquare.defaultProps = {\n  value: null,\n};\n\nSquare.propTypes = {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  value: PropTypes.number,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Square;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Square from './Square';\nimport '../scss/Board.scss';\n\nclass Board extends PureComponent {\n  renderSquare(x, y) {\n    const { squares, onClick } = this.props;\n    return (\n      <Square\n        key={`${x}-${y}`}\n        x={x}\n        y={y}\n        value={squares[y][x]}\n        onClick={onClick}\n      />\n    );\n  }\n\n  render() {\n    const { squares } = this.props;\n    return (\n      <section className=\"board\">\n        {\n          squares.map((row, y) => (\n            (\n              // 要用甚麼當 key ?\n              // eslint-disable-next-line react/no-array-index-key\n              <div key={y} className=\"board-row\">\n                {row.map((col, x) => this.renderSquare(x, y))}\n              </div>\n            )\n          ))\n        }\n      </section>\n    );\n  }\n}\n\nBoard.propTypes = {\n  squares: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Board;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport '../scss/controlsize.scss';\n\nconst CustomInput = ({ x, y, handleClickCustom }) => (\n  <form\n    className=\"customSize-form\"\n    name=\"customSize\"\n  >\n    <input\n      type=\"number\"\n      className=\"customSize-form__input\"\n      value={x}\n      min=\"5\"\n      max=\"24\"\n      name=\"x\"\n      onChange={handleClickCustom}\n    />\n    <span className=\"customSize-form__multi-sign\">X</span>\n    <input\n      type=\"number\"\n      className=\"customSize-form__input\"\n      value={y}\n      name=\"y\"\n      min=\"5\"\n      max=\"24\"\n      onChange={handleClickCustom}\n    />\n  </form>\n);\n\nCustomInput.propTypes = {\n  x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  y: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  handleClickCustom: PropTypes.func.isRequired,\n};\n\nclass Controlsize extends PureComponent {\n  render() {\n    const {\n      whichsize, x, y, handleChangeSize, handleClickCustom,\n    } = this.props;\n\n    return (\n      <div className=\"controlsize\">\n        <button\n          type=\"button\"\n          value=\"19\"\n          className={`controlsize__item ${whichsize === 19 ? 'controlsize__item--active' : ''}`}\n          onClick={handleChangeSize}\n        >\n          19 X 19\n        </button>\n        <button\n          type=\"button\"\n          value=\"10\"\n          className={`controlsize__item ${whichsize === 10 ? 'controlsize__item--active' : ''}`}\n          onClick={handleChangeSize}\n        >\n          10 X 10\n        </button>\n        <button\n          type=\"button\"\n          className={`controlsize__item ${whichsize === 'custom' ? 'controlsize__item--active' : ''}`}\n          onClick={handleClickCustom}\n        >\n          <h4 className=\"customSize-form__title\">Custom Size</h4>\n          {x && <CustomInput x={x} y={y} handleClickCustom={handleClickCustom} />}\n        </button>\n      </div>\n    );\n  }\n}\n\nControlsize.propTypes = {\n  whichsize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  y: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  handleChangeSize: PropTypes.func.isRequired,\n  handleClickCustom: PropTypes.func.isRequired,\n};\n\nexport default Controlsize;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../scss/GameSteps.scss';\n\nconst GameSteps = ({ history, handleJumpTo }) => {\n  const moves = history.map((step, move) => {\n    const desc = move ? `Go to move # ${move}` : 'Go to game start';\n    return (\n      // eslint-disable-next-line react/no-array-index-key\n      <li key={move} className=\"game-step\">\n        <button\n          type=\"button\"\n          onClick={() => handleJumpTo(move)}\n        >\n          {desc}\n        </button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"game-steps\">\n      <ol>{moves}</ol>\n    </div>\n  );\n};\n\nGameSteps.propTypes = {\n  history: PropTypes.arrayOf(PropTypes.shape({\n    squares: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\n  })).isRequired,\n  handleJumpTo: PropTypes.func.isRequired,\n};\n\nexport default GameSteps;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './reset.css';\nimport './index.css';\n\n\nimport Board from './component/Board';\nimport Controlsize from './component/Controlsize';\nimport GameSteps from './component/GameSteps';\n\n\nconst calculateWinner = (squares, x, y, player) => {\n  const num = 5;\n  const calcuNum = (dx, dy) => {\n    let i;\n    for (i = 1; i < num; i++) {\n      if (!squares[y + dy * i] || !squares[y + dy * i][x + dx * i]\n        || player !== squares[y + dy * i][x + dx * i]) return i - 1;\n    }\n    return i;\n  };\n\n  const checkDirec = (first, second) => {\n    const firstN = calcuNum(first.x, first.y);\n    const secondN = calcuNum(second.x, second.y);\n    return (secondN === num || firstN === num\n      || (secondN + firstN) >= num - 1)\n      ? player : null;\n  };\n\n  const directions = [\n    // 檢查水平連續相同的棋子數目\n    { fist: { x: -1, y: 0 }, second: { x: 1, y: 0 } },\n    // 檢查垂直連續相同的棋子數目\n    { fist: { x: 0, y: 1 }, second: { x: 0, y: -1 } },\n    // 檢查 m = -1 連續相同的棋子數目\n    { fist: { x: -1, y: -1 }, second: { x: 1, y: 1 } },\n    // 檢查 m = -1 連續相同的棋子數目\n    { fist: { x: -1, y: 1 }, second: { x: 1, y: -1 } },\n  ];\n\n  const isWinner = directions.find(direction => checkDirec(direction.fist, direction.second));\n\n  if (isWinner) return player;\n  return null;\n};\n\nconst NextStone = ({ oneIsNext }) => (\n  <div className=\"next_player\">\n    <p>Next player </p>\n    <div className={`stone ${oneIsNext ? 'black' : 'white'}`} />\n  </div>\n);\n\nNextStone.propTypes = {\n  oneIsNext: PropTypes.bool.isRequired,\n};\n\nconst WinnerStone = ({ isBlack }) => (\n  <div className=\"winner_player\">\n    <p>Winner</p>\n    <div className={`stone ${isBlack ? 'black' : 'white'}`} />\n  </div>\n);\n\nWinnerStone.propTypes = {\n  isBlack: PropTypes.bool.isRequired,\n};\n\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(19).fill().map(() => Array(19).fill(null)),\n      }],\n      stepNumber: 0,\n      oneIsNext: true,\n      winner: null,\n      custom: {\n        x: '',\n        y: '',\n      },\n    };\n  }\n\n  handleClick = (x, y) => {\n    const { oneIsNext, stepNumber, winner } = this.state;\n    let { history } = this.state;\n    history = history.slice(0, stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = JSON.parse(JSON.stringify(current.squares.slice()));\n    if (winner || squares[y][x]) {\n      return;\n    }\n\n    squares[y][x] = oneIsNext ? 1 : 2;\n    this.setState({\n      history: history.concat([{ squares }]),\n      stepNumber: history.length,\n      oneIsNext: !oneIsNext,\n      winner: calculateWinner(squares, x, y, squares[y][x]),\n    });\n  }\n\n\n  handleChangeSize = e => {\n    const size = Number(e.target.value);\n    this.setState({\n      history: [{\n        squares: Array(size).fill().map(() => Array(size).fill(null)),\n      }],\n      stepNumber: 0,\n      oneIsNext: true,\n      winner: null,\n      custom: {\n        x: '',\n        y: '',\n      },\n    });\n  }\n\n  handleClickCustom = () => {\n    const form = document.forms.customSize;\n    let x = form ? Number(form.elements.x.value) : 5;\n    let y = form ? Number(form.elements.y.value) : 5;\n    if (x > 24) x = 24;\n    if (y > 24) y = 24;\n    const custom = { x, y };\n    this.setState({\n      history: [{\n        squares: Array(y).fill().map(() => Array(x).fill(null)),\n      }],\n      stepNumber: 0,\n      oneIsNext: true,\n      winner: null,\n      custom,\n    });\n  }\n\n  jumpTo = step => {\n    this.setState({\n      stepNumber: step,\n      oneIsNext: (step % 2) === 0,\n      winner: null,\n    });\n  }\n\n  render() {\n    const {\n      history, stepNumber, oneIsNext, winner, custom: { x, y },\n    } = this.state;\n    const current = history[stepNumber];\n\n\n    const whichsize = x ? 'custom' : history[0].squares.length;\n\n    let status;\n    if (winner) {\n      status = <WinnerStone isBlack={winner === 1} />;\n    } else {\n      status = <NextStone oneIsNext={oneIsNext} />;\n    }\n\n    return (\n      <div className=\"game\">\n        <h1 className=\"game-title\">Gomoku</h1>\n        <div className=\"player\">{status}</div>\n        <div className=\"game-wrapper\">\n          <Controlsize\n            whichsize={whichsize}\n            x={x}\n            y={y}\n            handleChangeSize={this.handleChangeSize}\n            handleClickCustom={this.handleClickCustom}\n          />\n          <Board\n            squares={current.squares}\n            onClick={this.handleClick}\n          />\n          <GameSteps history={history} handleJumpTo={this.jumpTo} />\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}